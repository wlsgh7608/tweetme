{"version":3,"sources":["logo.svg","tweets/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["TweetsComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","ref","required","type","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","tweetsEl"],"mappings":"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","file":"static/js/main.120f20f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect,useState  } from 'react';\r\nimport { loadTweets } from '../lookup';\r\n\r\nexport function TweetsComponent(props){\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets,setNewTweets] = useState([])\r\n    const handleSubmit = (event)=>{\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        let tempNewTweets = [...newTweets]\r\n\r\n        // change this to a server side call\r\n        tempNewTweets.unshift({\r\n            content : newVal,\r\n            likes : 0,\r\n            id : 123123\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className ={props.className}>\r\n        <div className = 'col-12 mb-3'>\r\n         <form onSubmit ={handleSubmit}>\r\n        <textarea  ref = {textAreaRef} required = {true} className = 'form-control'></textarea>\r\n        <button type = 'submit' className = 'btn btn-primary my-3'>Tweet</button>\r\n    </form>\r\n    </div>\r\n    <TweetsList newTweets = {newTweets}></TweetsList>\r\n    </div>\r\n}\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])    \r\n    const [tweets,setTweets] = useState([])\r\n    // console.log(\r\n    useEffect(()=>{\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    },[props.newTweets, tweets,tweetsInit])\r\n\r\n    useEffect(() => {\r\n        // do my lookup\r\n        const myCallback = (response, status) => {\r\n            if (status === 200) {\r\n                setTweetsInit(response)\r\n            } else {\r\n                alert(\"Thre was an error\")\r\n            }\r\n        }\r\n        loadTweets(myCallback)\r\n    }, [])\r\n    return tweets.map((item, index) => {\r\n        return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}- {tweet.id}`} />\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\n// 좋아요,싫어요,리트윗 버튼 &\r\nexport function ActionBtn(props){\r\n    const {tweet,action} = props \r\n    const [likes,setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike,setUserLike] = useState(tweet.userLike === true? true :  false)\r\n    const className  = props.className? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display? action.display : 'Action'\r\n\r\n    const handleClick = (event)=>{\r\n        event.preventDefault()\r\n        if (action.type ==='like'){\r\n            if (userLike === true){\r\n                //prehaps i Unlike it?\r\n                setLikes(likes -1)\r\n                setUserLike(false)\r\n            }\r\n            else{\r\n                setLikes(likes+1)\r\n                setUserLike(true)\r\n            }\r\n        }\r\n    }\r\n    const display = action.type === 'like'? `${likes}  ${actionDisplay}`:actionDisplay\r\n    return <button className = {className} onClick = {handleClick}> {display}</button>\r\n  }\r\n  \r\n export function Tweet(props){\r\n    const {tweet} = props\r\n    const className  = props.className? props.className : 'col-10 mx-auto col-md-6'\r\n    \r\n    return <div className = {className}>\r\n      <p>{tweet.id} -  {tweet.content}</p>\r\n      <div className = 'btn btn-broup'>\r\n        <ActionBtn tweet= {tweet} action  = {{type : \"like\", display :\"Likes\"} }/>\r\n        <ActionBtn tweet= {tweet} action  = {{type : \"unlike\", display : \"Unlike\"} }/>\r\n        <ActionBtn tweet= {tweet} action  = {{type : \"retweet\", display : \"Retweet\"} }/>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n","export function loadTweets(callback){\r\n    const xhr = new XMLHttpRequest()\r\n    const method = 'GET'\r\n    const url = \"http://localhost:8000/api/tweets\"\r\n    const responseType = 'json'\r\n  \r\n  \r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function () {\r\n      callback(xhr.response,xhr.status)\r\n    }\r\n    xhr.onerror = function(e){\r\n      console.log(e)\r\n      callback({\"message\":\"The request was as error\"},400)\r\n    }\r\n    xhr.send()\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\n\n\n// function ReTweetBtn(tweet){\n//   return \"<button class = 'btn btn-outline-success btn-sm' onclick = handleTweetActionBtn(\"+\n//   tweet.id+\",\"+tweet.likes+ \",'retweet') > ReTweet</button>\"\n// }\n\n// // 싫어요 \n// function UnLikeBtn(tweet){\n//   return \"<button class = 'btn btn-outline-primary btn-sm' onclick = handleTweetActionBtn(\"+\n//   tweet.id+\",\"+tweet.likes+ \",'unlike') > UnLike</button>\"\n// }\n\n\n\n\n\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TweetsComponent } from './tweets';\n\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(<App></App>,appEl);\n}\n\nconst tweetsEl = document.getElementById('tweetme-2')\nif(tweetsEl){\n  ReactDOM.render(<TweetsComponent></TweetsComponent>,tweetsEl);\n}\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}